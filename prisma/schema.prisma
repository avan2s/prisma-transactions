generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AppUser {
  id        BigInt @id @default(autoincrement())
  firstname String
  lastname  String
  email     String
  posts     Post[]

  @@map("app_user")
}

model Post {
  id             BigInt       @id @default(autoincrement())
  comment        String
  userId         BigInt
  user           AppUser      @relation(fields: [userId], references: [id])
  postArtifactId BigInt       @map("post_artifact_id")
  postArtifact   PostArtifact @relation(fields: [postArtifactId], references: [id])

  @@map("post")
}

model PostArtifact {
  id    BigInt @id @default(autoincrement())
  name  String
  posts Post[]

  @@map("post_artifact")
}

model Artifact {
  ID             Int              @id @unique @default(autoincrement())
  Name           String           @unique @map("name") @db.VarChar(200)
  AssignedSite   ExcavationSite   @relation(fields: [AssignedSiteID], references: [ID], onDelete: Cascade)
  AssignedSiteID Int              @map("assignedSite")
  Notes          String           @default("No notes available") @map("notes") @db.VarChar(255)
  Owner          User             @relation(fields: [OwnerID], references: [ID])
  OwnerID        Int              @map("owner")
  Image          String?          @map("assignedImage") @db.VarChar(32)
  Category       ArtifactCategory @relation(fields: [CategoryID], references: [ID])
  CategoryID     Int              @map("category")
  Epoch          Epoch?           @relation(fields: [EpochID], references: [ID], onDelete: SetNull)
  EpochID        Int?             @map("epoch")
  QrCode         QrCode?
  Material       String?          @map("material") @db.VarChar(100)
  Length         Float?           @map("length")
  Width          Float?           @map("width")
  SharedEntity   SharedEntity[]
  IsShared       Boolean          @default(false) @map("isShared")

  @@map("artifacts")
}

model ArtifactCategory {
  ID           Int        @id @unique @default(autoincrement())
  CategoryName String     @map("category_name")
  Artifact     Artifact[]

  @@map("artifact_category")
}

model ExcavationSite {
  ID           Int                     @id @unique @default(autoincrement()) @map("id")
  Name         String                  @map("name") @db.VarChar(200)
  Latitude     Float                   @map("lat")
  Longitude    Float                   @map("lng")
  Epoch        Epoch                   @relation(fields: [EpochID], references: [ID])
  EpochID      Int                     @map("epoch")
  Note         String                  @default("No notes available") @map("note") @db.VarChar(255)
  Owner        User                    @relation(fields: [OwnerID], references: [ID])
  OwnerID      Int                     @map("owner")
  Category     ExcavationSiteCategory? @relation(fields: [CategoryID], references: [ID])
  CategoryID   Int                     @map("category")
  Artifacts    Artifact[]
  SharedEntity SharedEntity[]
  IsShared     Boolean                 @default(false) @map("isShared")

  @@map("excavation_sites")
}

model Epoch {
  ID              Int              @id @unique @default(autoincrement())
  Name            String           @unique @map("name") @db.VarChar(45)
  Category        EpochCategory    @relation(fields: [CategoryID], references: [ID], onDelete: Cascade)
  CategoryID      Int              @map("category")
  ExcavationSites ExcavationSite[]
  Artifacts       Artifact[]

  @@map("epochs")
}

model EpochCategory {
  ID     Int     @id @unique @default(autoincrement())
  Value  String  @db.VarChar(50)
  Epochs Epoch[]

  @@map("epoch_categories")
}

model ExcavationSiteCategory {
  ID       Int     @id @unique @default(autoincrement())
  Name     String  @unique @db.VarChar(50)
  IsCustom Boolean @default(false)

  ExcavationSites ExcavationSite[]

  @@map("excavation_site_categories")
}

model User {
  ID              Int              @id @unique @default(autoincrement())
  Firstname       String           @map("firstname") @db.VarChar(45)
  Lastname        String           @map("lastname") @db.VarChar(45)
  Phone           String           @unique @map("phone") @db.VarChar(60)
  EMail           String           @unique @map("email") @db.VarChar(45)
  Username        String           @unique @map("username") @db.VarChar(45)
  Password        String           @map("password") @db.VarChar(255)
  RoleID          Int              @map("role")
  IsLocked        Boolean          @default(false) @map("isLocked")
  Avatar          String?          @unique @db.VarChar(36)
  Artifacts       Artifact[]
  ExcavationSites ExcavationSite[]
  UserSettings    UserSetting[]
  SharedEntities  SharedEntity[]

  @@map("users")
}

model QrCode {
  ID          Int      @id @unique @default(autoincrement())
  Identifier  String   @unique @db.VarChar(36)
  Content     String   @db.Text
  Reference   Artifact @relation(fields: [ReferenceId], references: [ID], onDelete: Cascade)
  ReferenceId Int      @unique @map("Reference")

  @@map("qrcodes")
}

model SharedEntity {
  ID               Int             @id @unique @default(autoincrement())
  Artifact         Artifact?       @relation(fields: [ArtifactId], references: [ID], onDelete: Cascade)
  ArtifactId       Int?            @map("Artifact")
  ExcavationSite   ExcavationSite? @relation(fields: [ExcavationSiteId], references: [ID], onDelete: Cascade)
  ExcavationSiteId Int?            @map("ExcavationSite")
  User             User            @relation(fields: [UserId], references: [ID], onDelete: Cascade)
  UserId           Int             @map("User")

  @@map("shared_entities")
}

model UserSetting {
  ID            Int    @id @unique @default(autoincrement())
  setting_name  String
  setting_value String
  userId        Int
  user          User   @relation(fields: [userId], references: [ID])
}
